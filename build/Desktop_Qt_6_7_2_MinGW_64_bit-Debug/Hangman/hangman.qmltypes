import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "hangmangame.h"
        name: "HangmanGame"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Hangman/Hangman 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "word"
            type: "QString"
            read: "word"
            notify: "wordChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "lettersOwned"
            type: "QString"
            read: "lettersOwned"
            notify: "lettersOwnedChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "vowels"
            type: "QString"
            read: "vowels"
            index: 2
            isReadonly: true
            isConstant: true
        }
        Property {
            name: "consonants"
            type: "QString"
            read: "consonants"
            index: 3
            isReadonly: true
            isConstant: true
        }
        Property {
            name: "errorCount"
            type: "int"
            read: "errorCount"
            notify: "errorCountChanged"
            index: 4
            isReadonly: true
        }
        Property {
            name: "vowelsUnlocked"
            type: "bool"
            read: "vowelsUnlocked"
            write: "setVowelsUnlocked"
            notify: "vowelsUnlockedChanged"
            index: 5
        }
        Property {
            name: "vowelsAvailable"
            type: "int"
            read: "vowelsAvailable"
            write: "setVowelsAvailable"
            notify: "vowelsAvailableChanged"
            index: 6
        }
        Property {
            name: "wordsGiven"
            type: "int"
            read: "wordsGiven"
            write: "setWordsGiven"
            notify: "wordsGivenChanged"
            index: 7
        }
        Property {
            name: "wordsGuessedCorrectly"
            type: "int"
            read: "wordsGuessedCorrectly"
            write: "setWordsGuessedCorrectly"
            notify: "wordsGuessedCorrectlyChanged"
            index: 8
        }
        Property {
            name: "score"
            type: "int"
            read: "score"
            write: "setScore"
            notify: "scoreChanged"
            index: 9
        }
        Signal { name: "wordChanged" }
        Signal { name: "lettersOwnedChanged" }
        Signal { name: "errorCountChanged" }
        Signal {
            name: "vowelBought"
            Parameter { name: "vowel"; type: "QChar" }
        }
        Signal {
            name: "purchaseWasSuccessful"
            Parameter { name: "wasSuccessful"; type: "bool" }
        }
        Signal {
            name: "vowelsUnlockedChanged"
            Parameter { name: "unlocked"; type: "bool" }
        }
        Signal {
            name: "vowelsAvailableChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "wordsGivenChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "wordsGuessedCorrectlyChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "scoreChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Method {
            name: "registerLetterBought"
            Parameter { name: "letter"; type: "QChar" }
        }
        Method { name: "reset" }
        Method { name: "reveal" }
        Method { name: "gameOverReveal" }
        Method {
            name: "requestLetter"
            Parameter { name: "letterString"; type: "QString" }
        }
        Method {
            name: "guessWord"
            Parameter { name: "word"; type: "QString" }
        }
        Method {
            name: "isVowel"
            type: "bool"
            Parameter { name: "letter"; type: "QString" }
        }
        Method {
            name: "setVowelsAvailable"
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "setWordsGiven"
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "setWordsGuessedCorrectly"
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "setScore"
            Parameter { name: "score"; type: "int" }
        }
    }
    Component {
        file: "inappproductqmltype.h"
        name: "InAppProductQmlType"
        accessSemantics: "reference"
        prototype: "QObject"
        interfaces: ["QQmlParserStatus"]
        exports: ["Hangman/Product 1.0"]
        exportMetaObjectRevisions: [256]
        Enum {
            name: "Status"
            values: [
                "Uninitialized",
                "PendingRegistration",
                "Registered",
                "Unknown"
            ]
        }
        Enum {
            name: "ProductType"
            values: ["Consumable", "Unlockable"]
        }
        Property {
            name: "identifier"
            type: "QString"
            read: "identifier"
            write: "setIdentifier"
            notify: "identifierChanged"
            index: 0
        }
        Property {
            name: "type"
            type: "ProductType"
            read: "type"
            write: "setType"
            notify: "typeChanged"
            index: 1
        }
        Property {
            name: "price"
            type: "QString"
            read: "price"
            notify: "priceChanged"
            index: 2
            isReadonly: true
        }
        Property {
            name: "title"
            type: "QString"
            read: "title"
            notify: "titleChanged"
            index: 3
            isReadonly: true
        }
        Property {
            name: "description"
            type: "QString"
            read: "description"
            notify: "descriptionChanged"
            index: 4
            isReadonly: true
        }
        Property {
            name: "status"
            type: "Status"
            read: "status"
            notify: "statusChanged"
            index: 5
            isReadonly: true
        }
        Property {
            name: "store"
            type: "InAppStoreQmlType"
            isPointer: true
            read: "store"
            write: "setStore"
            notify: "storeChanged"
            index: 6
        }
        Signal {
            name: "purchaseSucceeded"
            Parameter { name: "transaction"; type: "InAppTransaction"; isPointer: true }
        }
        Signal {
            name: "purchaseFailed"
            Parameter { name: "transaction"; type: "InAppTransaction"; isPointer: true }
        }
        Signal {
            name: "purchaseRestored"
            Parameter { name: "transaction"; type: "InAppTransaction"; isPointer: true }
        }
        Signal { name: "identifierChanged" }
        Signal { name: "statusChanged" }
        Signal { name: "priceChanged" }
        Signal { name: "titleChanged" }
        Signal { name: "descriptionChanged" }
        Signal { name: "storeChanged" }
        Signal { name: "typeChanged" }
        Method {
            name: "handleTransaction"
            Parameter { name: "transaction"; type: "InAppTransaction"; isPointer: true }
        }
        Method {
            name: "handleProductRegistered"
            Parameter { name: "product"; type: "InAppProduct"; isPointer: true }
        }
        Method {
            name: "handleProductUnknown"
            Parameter { type: "InAppProduct::ProductType" }
            Parameter { name: "identifier"; type: "QString" }
        }
        Method { name: "purchase" }
        Method { name: "resetStatus" }
    }
    Component {
        file: "inappstoreqmltype.h"
        name: "InAppStoreQmlType"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Hangman/Store 1.0"]
        exportMetaObjectRevisions: [256]
        Method { name: "restorePurchases" }
    }
    Component {
        file: "inapptransaction.h"
        name: "QQmlTypeNotAvailable"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Hangman/Transaction 1.0"]
        exportMetaObjectRevisions: [256]
    }
}
